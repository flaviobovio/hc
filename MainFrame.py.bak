"""Subclass of MainFrameBase, which is generated by wxFormBuilder."""

import gui
import wx
import wx.aui
from entidades import *
from datetime import datetime
import time
from Validadores import *
from BuscarPacienteDialog import BuscarPacienteDialog
from datetime import date
from Funciones import *
import shutil
from Validadores import *


# Implementing MainFrameBase
class MainFrame( gui.MainFrameBase ):
    
    m_Paciente = None    
    m_Visita   = None
    agrega_edita = None
    def __init__( self, parent ):
        gui.MainFrameBase.__init__( self, parent )
        self.HabilitarControles(False)     
        self.m_textCtrlFechaNacimiento.SetValidator(ValidarFecha())
        self.m_textCtrlFechaVisita.SetValidator(ValidarFecha())        
            

    def LlenarControles (self):       
        if self.m_Paciente.id == None:           
            self.m_textCtrlId.SetValue("")    
            self.m_textCtrlFechaNacimiento.SetValue("")
        else:
            self.m_textCtrlId.SetValue(str(self.m_Paciente.id))
            self.m_textCtrlFechaNacimiento.SetValue(self.m_Paciente.fecha_nacimiento.strftime('%d/%m/%y'))            
        self.m_textCtrlNombre.SetValue(self.m_Paciente.nombre)
        self.m_textCtrlDireccion.SetValue(self.m_Paciente.direccion)
        self.m_textCtrlLocalidad.SetValue(self.m_Paciente.localidad)
        self.m_textCtrlProvincia.SetValue(self.m_Paciente.provincia)
        self.m_textCtrlTelefono.SetValue(self.m_Paciente.telefono)
        self.m_textCtrlObra_Social.SetValue(self.m_Paciente.obra_social)
        self.m_textCtrlAntecedentes_Fam.SetValue(self.m_Paciente.antecedentes_fam)
        self.m_textCtrlAntecedentes_Per.SetValue(self.m_Paciente.antecedentes_per)                
        self.m_listBoxVisitas.Clear()
        ult = None
        for vis in self.m_Paciente.visitas:
            self.m_listBoxVisitas.Append(vis.fecha.strftime('%d/%m/%y') + " - " + vis.motivo, vis)
            if ult == None:
                ult = vis
                    
        if ult != None:
            self.m_textCtrlFechaVisita.SetValue(ult.fecha.strftime('%d/%m/%y'))                
            self.m_textCtrlMotivo.SetValue(ult.motivo)
            self.m_textCtrlDetalle.SetValue(ult.detalle)
            self.m_listBoxVisitas.SetSelection(0)
            self.m_Visita = ult

        else:
            self.m_textCtrlFechaVisita.SetValue("")
            self.m_textCtrlMotivo.SetValue("")
            self.m_textCtrlDetalle.SetValue("")
            self.m_Visita = None                
                
                
                
                
                
    def m_OnListBoxVisitas( self, event ):
        self.m_Visita = self.m_listBoxVisitas.GetClientData(self.m_listBoxVisitas.GetSelection())
        if self.m_Visita != None:
            self.m_textCtrlFechaVisita.SetValue(self.m_Visita.fecha.strftime('%d/%m/%y'))
            self.m_textCtrlMotivo.SetValue(self.m_Visita.motivo)            
            self.m_textCtrlDetalle.SetValue(self.m_Visita.detalle)

        
    def VaciarDatos (self):
        self.m_Paciente = Paciente ("", "", "", "", "", "", None, "", "")
        self.LlenarControles()

    def HabilitarControles(self, acti): # True Activar, False Desactivar
        for ctrl in self.GetChildren():
            if ctrl.GetName() != "button":
                ctrl.Enable(acti)
                if acti:
                    ctrl.SetForegroundColour ('DARK_GREY')
                else:
                    ctrl.SetForegroundColour ('GREY')                
            else:
                ctrl.Enable(not acti)

        self.m_textCtrlId.Enable(False)

        self.m_listBoxVisitas.Enable(True)
        self.m_listBoxVisitas.SetForegroundColour("GREY")       
        self.m_textCtrlDetalle.SetForegroundColour("GREY") 
        self.m_textCtrlFechaVisita.Enable(False)
        self.m_textCtrlMotivo.Enable(False)
        self.m_textCtrlDetalle.Enable(False)        
        

        self.m_staticTextInfo.Enable(True)
        self.m_bpButtonDeshacer.Enable(acti)
        self.m_bpButtonGuardar.Enable(acti)       
        self.m_textCtrlNombre.SetFocus()
      

    
    def m_OnButtonClickPrimero( self, event ):  
        self.m_Paciente = SESSION.query(Paciente).order_by(Paciente.id).first()
        self.LlenarControles()
    def m_OnButtonClickAnterior( self, event ):
        cuen = self.m_textCtrlId.GetValue()
        self.m_Paciente = SESSION.query(Paciente).order_by(desc(Paciente.id)).filter(Paciente.id < cuen).first()
        if self.m_Paciente != None:
            self.LlenarControles()
    
    def m_OnButtonClickSiguiente( self, event ):
        cuen = self.m_textCtrlId.GetValue()
        self.m_Paciente = SESSION.query(Paciente).order_by(Paciente.id).filter(Paciente.id > cuen).first()
       
        if self.m_Paciente != None:
            self.LlenarControles()
    
    def m_OnButtonClickUltimo( self, event ):
        self.m_Paciente = SESSION.query(Paciente).order_by(desc(Paciente.id)).first()
        self.LlenarControles()

    def m_OnButtonClickAgregar( self, event ):
        self.agrega_edita = "paciente"        
        self.VaciarDatos()
        self.HabilitarControles(True)
    
    def m_OnButtonClickEditar( self, event ):
        if self.m_Paciente != None:
            self.agrega_edita = "paciente"
            self.HabilitarControles(True)
    
    def m_OnButtonClickBorrar( self, event ):
        if self.m_Paciente != None:
            acep = wx.MessageBox("Borrar Paciente ?", "Confirma", wx.YES_NO)
            if (acep == wx.YES):
                SESSION.delete(self.m_Paciente)
                SESSION.commit()
                self.VaciarDatos()

            
    def m_OnButtonGuardar( self, event ):
        if self.agrega_edita == "paciente":
            self.m_Paciente.nombre           = self.m_textCtrlNombre.GetValue()
            self.m_Paciente.direccion        = self.m_textCtrlDireccion.GetValue()
            self.m_Paciente.localidad        = self.m_textCtrlLocalidad.GetValue()
            self.m_Paciente.provincia        = self.m_textCtrlProvincia.GetValue()
            self.m_Paciente.telefono         = self.m_textCtrlTelefono.GetValue()
            self.m_Paciente.obra_social      = self.m_textCtrlObra_Social.GetValue()
            self.m_Paciente.antecedentes_fam = self.m_textCtrlAntecedentes_Fam.GetValue()
            self.m_Paciente.antecedentes_per = self.m_textCtrlAntecedentes_Per.GetValue()  
            self.m_Paciente.fecha_nacimiento = datetime.strptime(self.m_textCtrlFechaNacimiento.GetValue(), "%d/%m/%y")
            SESSION.merge(self.m_Paciente)        
        else:
            self.m_Visita.id_paciente = self.m_Paciente.id
            self.m_Visita.fecha = datetime.strptime(self.m_textCtrlFechaVisita.GetValue(), "%d/%m/%y")
            self.m_Visita.motivo = self.m_textCtrlMotivo.GetValue()
            self.m_Visita.detalle = self.m_textCtrlDetalle.GetValue()
            SESSION.merge(self.m_Visita)        

        SESSION.commit()
        self.LlenarControles()
        self.HabilitarControles(False)

    
    def m_OnButtonDeshacer( self, event ):
        self.m_Paciente = None
        self.m_Visita = None
        self.VaciarDatos()
        self.LlenarControles()
        self.HabilitarControles(False)
        
    def m_OnButtonClickBuscar( self, event ):
        busDialog = BuscarPacienteDialog(self) 
        busDialog.ShowModal()
        self.LlenarControles()
    
    def m_OnButtonBackup( self, event ):
        ubi = wx.DirSelector("Elija Ubicacion")
        if ubi == "":
            wx.MessageBox("NO se ha realizado la copia", 'Error', wx.OK | wx.ICON_ERROR)            
        else:
            shutil.copyfile("database.db", "backup.db")
            shutil.copyfile("database.db", ubi+"/backup.db")
            wx.MessageBox("Se ha copiado respaldo en " + ubi, '', wx.OK | wx.ICON_INFORMATION)
            
            
    
    def m_OnButtonCerrar( self, event ):
        self.Destroy()
        
    def m_OnButtonAgregarVisita( self, event ):
        if self.m_Paciente != None:
            self.agrega_edita = "visita"
            self.m_Visita = Visita(self.m_Paciente.id, date.today(), "", "")
            self.LlenarVisita()
            self.HabilitarVisita(True)            
            

    
    def m_OnButtonEditarVisita( self, event ):
        if self.m_Visita != None:
            self.agrega_edita = "visita"
            self.LlenarVisita()
            self.HabilitarVisita(True)            
        


    
    def m_OnButtonBorrarVisita( self, event ):
        if self.m_Visita != None:
            acep = wx.MessageBox("Borrar Visita ?", "Confirma", wx.YES_NO)
            if (acep == wx.YES):
                SESSION.delete(self.m_Visita)
                SESSION.commit()
                self.LlenarControles()
        
        
        event.Skip()
        
    def HabilitarVisita(self, acti):
        
        
        for ctrl in self.GetChildren():
            if ctrl.GetName() == "button":
                ctrl.Enable(not acti)


        self.m_bpButtonDeshacer.Enable(acti)
        self.m_bpButtonGuardar.Enable(acti)               
        self.m_textCtrlFechaVisita.Enable(acti)
        self.m_textCtrlMotivo.Enable(acti)
        self.m_textCtrlDetalle.Enable(acti)        
        self.m_listBoxVisitas.Enable(True)
        if acti:
            self.m_textCtrlMotivo.SetFocus()
            fgc = 'DARK_GREY'
        else:
            fgc = 'GREY'
        self.m_textCtrlFechaVisita.SetForegroundColour(fgc)
        self.m_textCtrlMotivo.SetForegroundColour(fgc)
        self.m_textCtrlDetalle.SetForegroundColour(fgc)
        self.m_listBoxVisitas.SetForegroundColour(fgc)


    def LlenarVisita(self):
        self.m_textCtrlFechaVisita.SetValue(self.m_Visita.fecha.strftime('%d/%m/%y'))
        self.m_textCtrlMotivo.SetValue(self.m_Visita.motivo)       
        self.m_textCtrlDetalle.SetValue(self.m_Visita.detalle)



        
    def m_OnCharFechaNacimiento( self, event ):
        if CaracterFecha (event.GetKeyCode()):
            event.Skip()

    def m_OnKillFocusFechaNacimiento( self, event ):
        return self.m_textCtrlFechaNacimiento.GetValidator().Validate(self.m_textCtrlFechaNacimiento)
    
    def m_OnCharFechaVisita( self, event ):
        if CaracterFecha (event.GetKeyCode()):
            event.Skip()

    def m_OnKillFocusFechaVisita( self, event ):
        return self.m_textCtrlFechaVisita.GetValidator().Validate(self.m_textCtrlFechaVisita)
    
    
                
        
        
